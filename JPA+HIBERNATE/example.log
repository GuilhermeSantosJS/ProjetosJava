DEBUG main org.hibernate.cfg.Configuration - processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - processing association property references
DEBUG main org.hibernate.cfg.Configuration - processing foreign key constraints
DEBUG main org.hibernate.validator.ClassValidator - ResourceBundle ValidatorMessages not found in thread context classloader
DEBUG main org.hibernate.validator.ClassValidator - ResourceBundle ValidatorMessages not found in Validator classloader. Delegate to org.hibernate.validator.resources.DefaultValidatorMessages
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - table found: project_lp2a4.aluno
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - columns: [idade, matricula, nome, id]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - foreign keys: []
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - indexes: [primary]
INFO main org.hibernate.tool.hbm2ddl.SchemaUpdate - schema update complete
DEBUG main org.hibernate.connection.DriverManagerConnectionProvider - returning connection to pool, pool size: 1
DEBUG main org.hibernate.impl.SessionFactoryImpl - Checking 0 named HQL queries
DEBUG main org.hibernate.impl.SessionFactoryImpl - Checking 0 named SQL queries
DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 16029922534
DEBUG main org.hibernate.transaction.JDBCTransaction - begin
DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG main org.hibernate.connection.DriverManagerConnectionProvider - total checked-out connections: 0
DEBUG main org.hibernate.connection.DriverManagerConnectionProvider - using pooled JDBC connection, pool size: 0
DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG main org.hibernate.jdbc.JDBCContext - after transaction begin
DEBUG main org.hibernate.engine.query.QueryPlanCache - unable to locate HQL query plan in cache; generating (SELECT aluno FROM Aluno aluno)
DEBUG main org.hibernate.hql.ast.QueryTranslatorImpl - parse() - HQL: SELECT aluno FROM Aluno aluno
DEBUG main org.hibernate.hql.ast.AST - --- HQL AST ---
 \-[QUERY] 'query'
    \-[SELECT_FROM] 'SELECT_FROM'
       +-[FROM] 'FROM'
       |  \-[RANGE] 'RANGE'
       |     +-[IDENT] 'Aluno'
       |     \-[ALIAS] 'aluno'
       \-[SELECT] 'SELECT'
          \-[IDENT] 'aluno'

DEBUG main org.hibernate.hql.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.ast.tree.FromElement - FromClause{level=1} :  Aluno (aluno) -> aluno0_
DEBUG main org.hibernate.hql.ast.tree.FromReferenceNode - Resolved :  aluno -> aluno0_.id
DEBUG main org.hibernate.hql.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} aluno0_.id ) ( FromClause{level=1} aluno aluno0_ ) )
DEBUG main org.hibernate.hql.ast.util.JoinProcessor - Using FROM fragment [aluno aluno0_]
DEBUG main org.hibernate.hql.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.ast.AST - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (aluno)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'aluno0_.id as id0_' {alias=aluno, className=Aluno, tableAlias=aluno0_}
    |  \-[SQL_TOKEN] SqlFragment: 'aluno0_.idade as idade0_, aluno0_.matricula as matricula0_, aluno0_.nome as nome0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[aluno], fromElementByTableAlias=[aluno0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'aluno aluno0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=aluno,role=null,tableName=aluno,tableAlias=aluno0_,origin=null,colums={,className=Aluno}}

DEBUG main org.hibernate.hql.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.ast.QueryTranslatorImpl - HQL: SELECT aluno FROM Aluno aluno
DEBUG main org.hibernate.hql.ast.QueryTranslatorImpl - SQL: select aluno0_.id as id0_, aluno0_.idade as idade0_, aluno0_.matricula as matricula0_, aluno0_.nome as nome0_ from aluno aluno0_
DEBUG main org.hibernate.hql.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.engine.query.HQLQueryPlan - HQL param location recognition took 1 mills (SELECT aluno FROM Aluno aluno)
DEBUG main org.hibernate.engine.query.QueryPlanCache - located HQL query plan in cache (SELECT aluno FROM Aluno aluno)
DEBUG main org.hibernate.engine.query.HQLQueryPlan - find: SELECT aluno FROM Aluno aluno
DEBUG main org.hibernate.engine.QueryParameters - named parameters: {}
DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG main org.hibernate.SQL - 
    select
        aluno0_.id as id0_,
        aluno0_.idade as idade0_,
        aluno0_.matricula as matricula0_,
        aluno0_.nome as nome0_ 
    from
        aluno aluno0_
DEBUG main org.hibernate.jdbc.AbstractBatcher - preparing statement
DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
DEBUG main org.hibernate.loader.Loader - processing result set
DEBUG main org.hibernate.loader.Loader - result set row: 0
DEBUG main org.hibernate.type.IntegerType - returning '2' as column: id0_
DEBUG main org.hibernate.loader.Loader - result row: EntityKey[Aluno#2]
DEBUG main org.hibernate.loader.Loader - Initializing object from ResultSet: [Aluno#2]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Hydrating entity: [Aluno#2]
DEBUG main org.hibernate.type.IntegerType - returning '22' as column: idade0_
DEBUG main org.hibernate.type.StringType - returning '123456789' as column: matricula0_
DEBUG main org.hibernate.type.StringType - returning 'Guilherme Santos' as column: nome0_
DEBUG main org.hibernate.loader.Loader - result set row: 1
DEBUG main org.hibernate.type.IntegerType - returning '3' as column: id0_
DEBUG main org.hibernate.loader.Loader - result row: EntityKey[Aluno#3]
DEBUG main org.hibernate.loader.Loader - Initializing object from ResultSet: [Aluno#3]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Hydrating entity: [Aluno#3]
DEBUG main org.hibernate.type.IntegerType - returning '22' as column: idade0_
DEBUG main org.hibernate.type.StringType - returning '123456789' as column: matricula0_
DEBUG main org.hibernate.type.StringType - returning 'Guilherme Santos' as column: nome0_
DEBUG main org.hibernate.loader.Loader - result set row: 2
DEBUG main org.hibernate.type.IntegerType - returning '4' as column: id0_
DEBUG main org.hibernate.loader.Loader - result row: EntityKey[Aluno#4]
DEBUG main org.hibernate.loader.Loader - Initializing object from ResultSet: [Aluno#4]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Hydrating entity: [Aluno#4]
DEBUG main org.hibernate.type.IntegerType - returning '22' as column: idade0_
DEBUG main org.hibernate.type.StringType - returning '123456789' as column: matricula0_
DEBUG main org.hibernate.type.StringType - returning 'Guilherme Santos' as column: nome0_
DEBUG main org.hibernate.loader.Loader - result set row: 3
DEBUG main org.hibernate.type.IntegerType - returning '5' as column: id0_
DEBUG main org.hibernate.loader.Loader - result row: EntityKey[Aluno#5]
DEBUG main org.hibernate.loader.Loader - Initializing object from ResultSet: [Aluno#5]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Hydrating entity: [Aluno#5]
DEBUG main org.hibernate.type.IntegerType - returning '22' as column: idade0_
DEBUG main org.hibernate.type.StringType - returning '123456789' as column: matricula0_
DEBUG main org.hibernate.type.StringType - returning 'Guilherme Santos' as column: nome0_
DEBUG main org.hibernate.loader.Loader - done processing result set (4 rows)
DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG main org.hibernate.jdbc.AbstractBatcher - closing statement
DEBUG main org.hibernate.loader.Loader - total objects hydrated: 4
DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [Aluno#2]
DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [Aluno#2]
DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [Aluno#3]
DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [Aluno#3]
DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [Aluno#4]
DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [Aluno#4]
DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [Aluno#5]
DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [Aluno#5]
DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
DEBUG main org.hibernate.transaction.JDBCTransaction - commit
DEBUG main org.hibernate.impl.SessionImpl - automatically flushing session
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - flushing session
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG main org.hibernate.engine.Cascade - processing cascade ACTION_PERSIST_ON_FLUSH for: Aluno
DEBUG main org.hibernate.engine.Cascade - done processing cascade ACTION_PERSIST_ON_FLUSH for: Aluno
DEBUG main org.hibernate.engine.Cascade - processing cascade ACTION_PERSIST_ON_FLUSH for: Aluno
DEBUG main org.hibernate.engine.Cascade - done processing cascade ACTION_PERSIST_ON_FLUSH for: Aluno
DEBUG main org.hibernate.engine.Cascade - processing cascade ACTION_PERSIST_ON_FLUSH for: Aluno
DEBUG main org.hibernate.engine.Cascade - done processing cascade ACTION_PERSIST_ON_FLUSH for: Aluno
DEBUG main org.hibernate.engine.Cascade - processing cascade ACTION_PERSIST_ON_FLUSH for: Aluno
DEBUG main org.hibernate.engine.Cascade - done processing cascade ACTION_PERSIST_ON_FLUSH for: Aluno
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushing entities and processing referenced collections
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Processing unreferenced collections
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Scheduling collection removes/(re)creates/updates
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.pretty.Printer - listing entities:
DEBUG main org.hibernate.pretty.Printer - Aluno{idade=22, matricula=123456789, nome=Guilherme Santos, id=5}
DEBUG main org.hibernate.pretty.Printer - Aluno{idade=22, matricula=123456789, nome=Guilherme Santos, id=4}
DEBUG main org.hibernate.pretty.Printer - Aluno{idade=22, matricula=123456789, nome=Guilherme Santos, id=3}
DEBUG main org.hibernate.pretty.Printer - Aluno{idade=22, matricula=123456789, nome=Guilherme Santos, id=2}
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - executing flush
DEBUG main org.hibernate.jdbc.ConnectionManager - registering flush begin
DEBUG main org.hibernate.jdbc.ConnectionManager - registering flush end
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - post flush
DEBUG main org.hibernate.jdbc.JDBCContext - before transaction completion
DEBUG main org.hibernate.impl.SessionImpl - before transaction completion
DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG main org.hibernate.jdbc.JDBCContext - after transaction completion
DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG main org.hibernate.connection.DriverManagerConnectionProvider - returning connection to pool, pool size: 1
DEBUG main org.hibernate.impl.SessionImpl - after transaction completion
INFO main org.hibernate.impl.SessionFactoryImpl - closing
INFO main org.hibernate.connection.DriverManagerConnectionProvider - cleaning up connection pool: jdbc:mysql://localhost:3306/project_lp2a4
